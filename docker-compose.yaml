version: '3.9'
services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - 8000:80
    depends_on:
      - api
    networks:
      - backend

  api:
    build:
      context: .
    image: ivinokurov/todolist
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    networks:
      - backend


  migrations:
    build:
      context: .
    image: ivinokurov/todolist
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate
    networks:
      - backend


  postgres:
    image: postgres:12.4-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - backend


volumes:
  db:

networks:
  backend:
    driver: bridge
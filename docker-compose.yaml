version: '3.9'
services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - 8000:80
    depends_on:
      - api

  api:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.docker_env:/code/.env

  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.docker_env:/code/.env
    command: python manage.py migrate

  postgres:
    image: postgres:12.4-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - 5432:5432
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  postgres:
  api:
  migrations: